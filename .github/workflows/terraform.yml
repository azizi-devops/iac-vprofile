name: "vprofile IAC"
on: 
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**


env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks
  

jobs:
   terraform:
      runs-on: ubuntu-latest
      defaults:
        run:
          shell: bash
          working-directory: ./terraform
      
      steps:
        - name: Checkout source code
          uses: actions/checkout@v4

        - name: setup terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.6.6

        - name: terraform init 
          id: init
          run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"

        - name: terraform format
          id: fmt
          run: terraform fmt -check

        - name: terraform validate
          id: validate
          run: terraform validate

        - name: terraform plan
          id: plan
          run: terraform plan -no-color -input=false -out planfile 
          continue-on-error: true


        - name: terraform plan status
          if: steps.plan.outcome == 'failure'
          run: exit 1

     

        - name: terraform apply
          id: apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false planfile

        - name: Configure AWS Credentilas
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
    
        - name: terraform getconfig
          id: getconfig
          if: steps.apply.outcome == 'success'
          run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}


        - name: Install Ingress Controller
          if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
          run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.13.0/deploy/static/provider/aws/deploy.yaml


  # test20